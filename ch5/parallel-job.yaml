# parallel-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: parallel-processing
  labels:
    app: parallel-processor
    pattern: work-queue
spec:
  completions: 10          # Need 10 successful completions
  parallelism: 3           # Run 3 pods simultaneously
  backoffLimit: 20         # Allow more retries for parallel work
  
  template:
    metadata:
      labels:
        app: parallel-processor
    spec:
      restartPolicy: OnFailure  # Restart failed containers
      
      containers:
      - name: worker
        image: busybox:1.35
        command: ['sh', '-c']
        args:
        - |
          # Simulate work queue processing
          WORKER_ID=${HOSTNAME##*-}
          echo "Worker $WORKER_ID starting on node $NODE_NAME"
          
          # Each worker processes multiple items
          for item in $(seq 1 3); do
            WORK_ITEM="item-${WORKER_ID}-${item}"
            echo "Worker $WORKER_ID processing $WORK_ITEM"
            
            # Simulate variable processing time
            PROCESS_TIME=$((5 + RANDOM % 15))
            echo "Processing $WORK_ITEM will take $PROCESS_TIME seconds"
            
            for i in $(seq 1 $PROCESS_TIME); do
              if [ $((i % 5)) -eq 0 ]; then
                echo "Worker $WORKER_ID: $WORK_ITEM progress: $i/$PROCESS_TIME"
              fi
              sleep 1
            done
            
            echo "Worker $WORKER_ID completed $WORK_ITEM"
          done
          
          echo "Worker $WORKER_ID finished all work items"
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        resources:
          requests:
            memory: "32Mi"
            cpu: "25m"
          limits:
            memory: "64Mi"
            cpu: "50m"