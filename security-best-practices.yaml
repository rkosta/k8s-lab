# security-best-practices.yaml
apiVersion: v1
kind: Pod
metadata:
  name: security-best-practices
  labels:
    app: secure-application
    security-policy: strict
  annotations:
    seccomp.security.alpha.kubernetes.io/pod: runtime/default
spec:
  # Pod-level security settings
  securityContext:
    runAsUser: 1001
    runAsGroup: 1001
    runAsNonRoot: true
    fsGroup: 1001
    seccompProfile:
      type: RuntimeDefault
  
  # Disable service account token mounting if not needed
  automountServiceAccountToken: false
  
  containers:
  - name: secure-app
    image: nginx:1.21-alpine
    ports:
    - name: http
      containerPort: 8080  # Non-privileged port
    
    # Container-level security
    securityContext:
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      runAsUser: 1001
      runAsGroup: 1001
      capabilities:
        drop:
        - ALL
        # Only add specific capabilities if absolutely needed
        # add:
        # - NET_BIND_SERVICE
    
    # Resource limits for security
    resources:
      requests:
        memory: "64Mi"
        cpu: "50m"
      limits:
        memory: "128Mi"
        cpu: "100m"
    
    # Environment variables (avoid secrets here)
    env:
    - name: APP_ENV
      value: "production"
    - name: LOG_LEVEL
      value: "info"
    
    # Volume mounts for writable areas
    volumeMounts:
    - name: tmp-volume
      mountPath: /tmp
    - name: var-cache
      mountPath: /var/cache/nginx
    - name: var-run
      mountPath: /var/run
    - name: nginx-conf
      mountPath: /etc/nginx/conf.d
      readOnly: true
  
  volumes:
  # Temporary storage
  - name: tmp-volume
    emptyDir:
      sizeLimit: "100Mi"
  
  # Cache storage
  - name: var-cache
    emptyDir:
      sizeLimit: "50Mi"
  
  # Runtime storage
  - name: var-run
    emptyDir:
      medium: "Memory"
      sizeLimit: "10Mi"
  
  # Configuration (read-only)
  - name: nginx-conf
    configMap:
      name: nginx-secure-config
      defaultMode: 0644